version: '3.3'
services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379

  monitor:
    build: .
    restart: always
    environment:
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env

  server:
    build: .
    restart: always
    ports:
      - '3000:3000'
    environment:
      - REDIS_URL=redis://redis:6379     
    env_file:
      - .env
    depends_on:
    - redis
    command: npm run server
  # Nginx setup
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.5
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
  letsencrypt-nginx-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-companion
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from: 
      - nginx-proxy
    restart: always
    depends_on:
      - nginx-proxy
    
  frontend:
     build: ./frontend    
     restart: always
     ports:
       - '8888:80'
     environment:
       - VIRTUAL_HOST= ${FRONTEND_HOST}
       - API_URL=http://localhost:3000    
     depends_on:
       - nginx-proxy
       - letsencrypt-nginx-companion
       - server 
